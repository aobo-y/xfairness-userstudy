{"version":3,"sources":["lib/dataset.js","Main/ContextModal.js","Main/QuestionItem.js","Main/Survey.js","Main/ParticipantInfo.js","Main/index.js","App.js","serviceWorker.js","index.js","Main/index.module.css","App.module.css"],"names":["datasets","yelp_category","require","yelp_price","id","name","metadata","exp","review","amazon_gender","amazon_active","PureComponent","RadioQuestion","_ref","text","value","options","onChange","react_default","a","createElement","style","marginBottom","icon","type","className","styles","es_radio","Group","map","_ref2","_ref3","Object","slicedToArray","t","v","Button","key","Item","_ref4","card","title","Boolean","Fragment","marginRight","Item2","_ref5","tag","idx","es_tag","color","QuestionItem","onRadioChange","e","_this$props","_this","props","target","_this2","this","_this$props2","itemName","items","choice","choiceRating","systemRating","expSentiment","expRating","expInfomativeness","expDetailedness","attn","itemsToShow","filter","item","showReview","row","gutter","col","xs","sm","md","lg","xl","QuestionItem_Item","QuestionItem_RadioQuestion","concat","bind","section","QuestionItem_Item2","q","Component","defaultProps","rating","Survey","onQuestionChange","qid","survey","questions","question","Main_QuestionItem","ParticipantInfo","onMIDChange","onGenderChange","onAgeChange","es_alert","message","marginTop","input","placeholder","mturk_id","gender","age","attentionMath","Main","state","context","submitted","loading","setContext","dataset_key","qs","parse","window","location","search","axios","get","timeout","then","res","console","log","data","pairs","duration","_","setState","startTime","Date","catch","err","response","status","notification","error","description","msg","finally","onContextSubmit","history","pushState","stringify","onSurveyChange","objectSpread","verifySurvey","verifyQuestion","entries","some","val","Array","isArray","i","length","onSubmit","verifyResult","post","auth","showNotification","success","showWarning","warning","_this$state","showIcon","spin","size","Main_ParticipantInfo","Main_Survey","es_button","onClick","disabled","Header","Layout","Content","Footer","shortid","generate","App","layout","profile","logo","content","src_Main","onEnd","footer","href","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6744a52c.chunk.js","sourcesContent":["const datasets = {\n    \"yelp_category\": require('../data/yelp_category.json'),\n    \"yelp_price\": [\n        [{\n            id: \"111\",\n            name: \"Item 1\",\n            metadata: [\"m1\", \"m2\", \"m3\"],\n            exp: \"This is a good item\",\n            review: \"This is a very positive review\"\n        }, {\n            id: \"112\",\n            name: \"Item 2\",\n            metadata: [\"m1\", \"m2\", \"m3\"],\n            exp: \"This is a bad item\",\n            review: \"This is a very negative review\"\n        }],\n        [{\n            id: \"113\",\n            name: \"Item 3\",\n            metadata: [\"m1\", \"m2\", \"m3\"],\n            exp: \"This is a good item\",\n            review: \"This is a very positive review\"\n        }, {\n            id: \"114\",\n            name: \"Item 4\",\n            metadata: [\"m1\", \"m2\", \"m3\"],\n            exp: \"This is a bad item\",\n            review: \"This is a very negative review\"\n        }],\n    ],\n    \"amazon_gender\": [],\n    \"amazon_active\": []\n}\n\nexport default datasets\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Modal, Form, Radio, Button, Select\n} from 'antd';\n\nimport datasets from '../lib/dataset';\n\nclass ContextModal extends PureComponent {\n  static propTypes = {\n    visible: PropTypes.bool.isRequired,\n    onSubmit: PropTypes.func.isRequired\n  }\n\n  state = {\n    dataset_key: 'yelp',\n  }\n\n  onDatasetChange = v => {\n    this.setState({ dataset_key: v });\n  }\n\n  onSubmit = () => {\n    this.props.onSubmit({...this.state});\n  }\n\n  mapDatasetKeyToLabel = (dataset_key) => {\n    return dataset_key.replace('_', ' ');\n  }\n\n  render() {\n    const { visible } = this.props;\n    const { dataset_key } = this.state;\n\n    return (\n      <Modal\n        title=\"Choose Context\"\n        visible={visible}\n        footer={null}\n        closable={false}\n      >\n        <Form>\n\n          <Form.Item\n            label=\"Dataset\"\n          >\n            <Select\n              value={dataset_key}\n              onChange={this.onDatasetChange}\n              style={{width: 280}}\n            >\n              {\n                Object.keys(datasets).map((v, idx) => (\n                  <Select.Option key={v} value={v}>{idx}. {this.mapDatasetKeyToLabel(v)}</Select.Option>\n                ))\n              }\n            </Select>\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" onClick={this.onSubmit}>Submit</Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default ContextModal;\n","import React, { Component, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Tag, Radio, Icon, Row, Col } from 'antd';\nimport * as _ from 'lodash';\n\nimport styles from './index.module.css';\n\n\nconst RadioQuestion = ({\n  text,\n  value,\n  options,\n  onChange,\n}) => {\n  return (\n    <div style={{marginBottom: 16}}>\n      <p><Icon type=\"question-circle\" className={styles.icon} />{text}</p>\n      <Radio.Group onChange={onChange} value={value}>\n        {options.map(([t, v]) => (\n          <Radio.Button key={v} value={v}>{t}</Radio.Button>\n        ))}\n      </Radio.Group>\n    </div>\n  )\n}\n\n\nconst Item = ({\n  id,\n  name,\n  exp,\n}) => {\n  return (\n    <Card title={name}>\n      {\n        Boolean(exp) && (\n          <>\n            <p><Icon type=\"solution\" style={{ marginRight: 8 }} />Explanation</p>\n            <p>{exp}</p>\n          </>\n        )\n      }\n    </Card>\n  )\n}\n\nconst Item2 = ({\n  id,\n  name,\n  metadata,\n  review,\n}) => {\n  return (\n    <Card title={name}>\n      Attributes:\n      {\n        Boolean(metadata) && metadata.map((tag, idx) =>\n          <Tag key={idx} color=\"blue\" style={{marginBottom: 6}}>\n            {tag}\n          </Tag>\n        )\n      }\n      {\n        Boolean(review) && (\n          <>\n            <p><Icon type=\"solution\" style={{ marginRight: 8 }} />User Review</p>\n            <p>{review}</p>\n          </>\n        )\n      }\n    </Card>\n  )\n}\n\nclass QuestionItem extends Component {\n  static propTypes = {\n    id: PropTypes.number.isRequired,\n    items: PropTypes.arrayOf(PropTypes.object).isRequired,\n    itemName: PropTypes.string,\n    choice: PropTypes.number,\n    choiceRating: PropTypes.number,\n    systemRating: PropTypes.number,\n    onChange: PropTypes.func,\n  }\n\n  static defaultProps = {\n    choice: null,\n    rating: null,\n    itemName: 'restaurant',\n  }\n\n  onRadioChange = (key, e) => {\n    const {id, onChange} = this.props;\n    onChange(id, key, e.target.value)\n  }\n\n  render() {\n    const {\n      id,\n      itemName,\n      items,\n      choice,\n      choiceRating,\n      systemRating,\n      expSentiment,\n      expRating,\n      expInfomativeness,\n      expDetailedness,\n      attn,\n    } = this.props;\n\n    const itemsToShow = items.filter((item, idx) => idx === 0 ? choice !== null : expRating[idx - 1])\n    const showReview = expRating[1] !== null;\n\n    return (\n      <>\n        <p>Please compare the two restaurants recommended below. You need to judge the quality of the restaurants based on the provided explanations.</p>\n        <Row gutter={24} style={{marginBottom: 16}}>\n          <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n            <Item\n              id={items[0].id}\n              name={items[0].name}\n              exp={items[0].exp}\n            />\n          </Col>\n          <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n            <Item\n              id={items[1].id}\n              name={items[1].name}\n              exp={items[1].exp}\n            />\n          </Col>\n        </Row>\n\n        <RadioQuestion\n          text={`Choose the ${itemName} you think is better (please note you cannot change this answer once selected):`}\n          value={choice}\n          onChange={this.onRadioChange.bind(this, 'choice')}\n          options={[\n            [`1. ${items[0].name}`, 0],\n            [`2. ${items[1].name}`, 1],\n          ]}\n        />\n\n        {\n          itemsToShow.map((item, idx) => (\n            <div key={idx} className={styles.section}>\n              <p>The following questions are for evaluating the explanation of item <b>{item.name}</b></p>\n              <p>Explanation: <b>{item.exp}</b></p>\n              <RadioQuestion\n                text='Please rate the sentiment of the explanation:'\n                value={expSentiment[idx]}\n                onChange={this.onRadioChange.bind(this, `expSentiment[${idx}]`)}\n                options={[\n                  ['Very Negative', 1],\n                  ['Negative', 2],\n                  ['Neutral', 3],\n                  ['Positive', 4],\n                  ['Very Positive', 5],\n                ]}\n              />\n              <RadioQuestion\n                text='Is the explanation informative:'\n                value={expInfomativeness[idx]}\n                onChange={this.onRadioChange.bind(this, `expInfomativeness[${idx}]`)}\n                options={[\n                  ['Not at all', 1],\n                  ['Somewhat', 2],\n                  ['Moderate', 3],\n                  [' Very ', 4],\n                  ['Extremely', 5],\n                ]}\n              />\n              <RadioQuestion\n                text='Is the explanation detailed:'\n                value={expDetailedness[idx]}\n                onChange={this.onRadioChange.bind(this, `expDetailedness[${idx}]`)}\n                options={[\n                  ['Not at all', 1],\n                  ['Somewhat', 2],\n                  ['Moderate', 3],\n                  [' Very ', 4],\n                  ['Extremely', 5],\n                ]}\n              />\n              <RadioQuestion\n                text='Is the explanation helpful for you to get some ideas about the restaurant?'\n                value={expRating[idx]}\n                onChange={this.onRadioChange.bind(this, `expRating[${idx}]`)}\n                options={[\n                  ['Not at all', 1],\n                  ['Somewhat', 2],\n                  ['Moderate', 3],\n                  [' Very ', 4],\n                  ['Extremely', 5],\n                ]}\n              />\n            </div>\n          ))\n        }\n\n\n        {\n          showReview && (\n            <div className={styles.section}>\n              <p>{`Now, additional information and a real user review are presented for the ${itemName}s.`}</p>\n              <Row gutter={24} style={{marginBottom: 16}}>\n                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                  <Item2\n                    id={items[0].id}\n                    name={items[0].name}\n                    metadata={items[0].metadata}\n                    review={items[0].review}\n                  />\n                </Col>\n                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                  <Item2\n                    id={items[1].id}\n                    name={items[1].name}\n                    metadata={items[1].metadata}\n                    review={items[1].review}\n                  />\n                </Col>\n              </Row>\n              <RadioQuestion\n                text='Based on our additionally provided information and the real user reviews about the recommended restaurants, do you think you made the right choice at the beginning, based on the explanations?'\n                value={choiceRating}\n                onChange={this.onRadioChange.bind(this, 'choiceRating')}\n                options={[\n                  ['Yes', 1],\n                  ['No', 0],\n                ]}\n              />\n              <RadioQuestion\n                text={`What is the result of ${attn.q[0]} plus ${attn.q[1]}?`}\n                value={attn.a}\n                onChange={this.onRadioChange.bind(this, 'attn.a')}\n                options={[\n                  ['One', 1],\n                  ['Two', 2],\n                  ['Three', 3],\n                  ['Four', 4],\n                  ['Five', 5],\n                ]}\n              />\n              <RadioQuestion\n                text='In general, are you satisfied with the recommendation-explanation system?'\n                value={systemRating}\n                onChange={this.onRadioChange.bind(this, 'systemRating')}\n                options={[\n                  ['Not at all', 1],\n                  ['Somewhat', 2],\n                  ['Moderate', 3],\n                  [' Very ', 4],\n                  ['Extremely', 5],\n                ]}\n              />\n            </div>\n          )\n        }\n      </>\n    );\n  }\n}\n\nexport default QuestionItem;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Card, Icon } from 'antd';\n\nimport QuestionItem from './QuestionItem';\nimport styles from './index.module.css';\n\nclass Survey extends PureComponent {\n  static propTypes = {\n    survey: PropTypes.object,\n    onChange: PropTypes.func.isRequired\n  }\n\n  onQuestionChange = (qid, key, value) => {\n    const { onChange } = this.props;\n    onChange(`questions[${qid}].${key}`, value)\n  }\n\n  render() {\n    const { survey } = this.props;\n    const questions = survey.questions.filter((q, idx) => idx === 0 || survey.questions[idx-1].systemRating !== null);\n\n    return (\n      <>\n        {questions.map((question, idx) => (\n          <Card\n            key={idx}\n            title={(<><Icon type=\"solution\" className={styles.icon} />Questionnaire {idx + 1}</>)}\n            style={{marginBottom: 16}}\n          >\n            <QuestionItem\n              id={idx}\n              items={question.items}\n              choice={question.choice}\n              choiceRating={question.choiceRating}\n              systemRating={question.systemRating}\n              expRating={question.expRating}\n              expSentiment={question.expSentiment}\n              expInfomativeness={question.expInfomativeness}\n              expDetailedness={question.expDetailedness}\n              attn={question.attn}\n              onChange={this.onQuestionChange}\n            />\n          </Card>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default Survey;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Alert, Input, Radio } from 'antd';\n\n\nclass ParticipantInfo extends PureComponent {\n  static propTypes = {\n    survey: PropTypes.object,\n    onChange: PropTypes.func.isRequired\n  }\n\n  onMIDChange = (e) => {\n    const { onChange } = this.props;\n    onChange(\"mturk_id\", e.target.value)\n  }\n\n  onGenderChange = (e) => {\n    const { onChange } = this.props;\n    onChange(\"gender\", e.target.value)\n  }\n\n  onAgeChange = (e) => {\n    const { onChange } = this.props;\n    onChange(\"age\", e.target.value)\n  }\n\n  render() {\n    const { survey } = this.props;\n\n    return (\n      <>\n        <Alert\n            message=\"Please note that your demographic information will not be stored,  associated with your Mechanical Turk ID, or used to identify any individuals. It will only be used for aggregated analysis of the results.\"\n            type=\"info\"\n        />\n        <div style={{marginTop: 16, marginBottom: 16}}>\n            <p>Your Amazon Mechnical Turk ID:</p>\n            <Input placeholder=\"Mturk ID\" value={survey.mturk_id} onChange={this.onMIDChange}/>\n        </div>\n\n        <div style={{marginBottom: 16}}>\n            <p>Your Gender:</p>\n            <Radio.Group onChange={this.onGenderChange} value={survey.gender}>\n                <Radio.Button value=\"male\">Male</Radio.Button>\n                <Radio.Button value=\"female\">Female</Radio.Button>\n                <Radio.Button value=\"other\">Other</Radio.Button>\n                <Radio.Button value=\"null\">Prefer not to say</Radio.Button>\n            </Radio.Group>\n        </div>\n\n        <div style={{marginBottom: 16}}>\n            <p>Your Age:</p>\n            <Radio.Group onChange={this.onAgeChange} value={survey.age}>\n                <Radio.Button value=\"<20>\">Less than 20</Radio.Button>\n                <Radio.Button value=\"20-29\">20-29</Radio.Button>\n                <Radio.Button value=\"30-39\">30-39</Radio.Button>\n                <Radio.Button value=\"40-49\">40-49</Radio.Button>\n                <Radio.Button value=\">50\">Above 50</Radio.Button>\n                <Radio.Button value=\"null\">Prefer not to say</Radio.Button>\n            </Radio.Group>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ParticipantInfo;\n","import * as _ from 'lodash';\nimport React, { PureComponent } from 'react';\n// import PropTypes from 'prop-types';\nimport qs from 'query-string';\nimport {\n  Card,\n  notification,\n  Button,\n  Icon,\n  Row,\n  Col,\n  Alert,\n  Spin,\n} from 'antd';\n\nimport axios from 'axios';\n\nimport ContextModal from './ContextModal';\nimport Survey from './Survey';\nimport ParticipantInfo from './ParticipantInfo';\n\nimport styles from './index.module.css';\n\n\nconst attentionMath = [\n  ['two', 'one', 3],\n  ['one', 'zero', 1],\n  ['four', 'one', 5],\n  ['one', 'three', 4],\n  ['three', 'two', 5],\n]\n\nclass Main extends PureComponent {\n  state = {\n    context: null,\n    survey: null,\n    submitted: false,\n    loading: false,\n  }\n\n  componentDidMount() {\n    this.setContext()\n  }\n\n  setContext = () => {\n    let {dataset_key} = qs.parse(window.location.search);\n\n    axios.get(`/context/${dataset_key}`, {timeout: 1000}).then(res => {\n      console.log(res.data)\n      const pairs = res.data\n      const survey = {\n        dataset_key,\n        mturk_id: null,\n        gender: null,\n        age: null,\n        duration: null,\n        questions: pairs.map((items, idx) => ({\n          items,\n          choice: null,\n          choiceRating: null,\n          systemRating: null,\n          expSentiment: [null, null],\n          expRating: [null, null],\n          expInfomativeness: [null, null],\n          expDetailedness: [null, null],\n          attn: {q: _.sample(attentionMath), a: null}\n        }))\n      }\n\n      this.setState({\n        context: {dataset_key},\n        survey,\n      }, () => {\n        // this.showWarning();\n        this.startTime = new Date();\n      });\n    }).catch(err => {\n      if (err.response.status === 400) {\n        notification.error({\n          duration: 10,\n          message: 'Error',\n          description: `Invalid context: ${dataset_key}`\n        });\n      } else {\n        const msg = err.response ? err.response.data : 'Network error';\n\n        notification.error({\n          duration: 10,\n          message: 'Error',\n          description: `${msg}! Please contact us in Mturk.`\n        });\n      }\n    }).finally(() => {\n      this.setState({loading: false})\n    });\n\n    this.setState({loading: true})\n  }\n\n  onContextSubmit = context => {\n    window.history.pushState({}, null, '?' + qs.stringify(context));\n    this.setContext();\n  }\n\n  onSurveyChange = (key, value) => {\n    const {survey} = this.state;\n    _.set(survey, key, value)\n    this.setState({\n      survey: {...survey}\n    }, () => {\n      this.verifySurvey();\n    })\n  }\n\n  verifyQuestion = (q) => {\n    return Object.entries(q).some(([_, val]) => {\n      if (Array.isArray(val)) {\n        return val.some(v => v === null)\n      } else {\n        return val === null\n      }\n    });\n  }\n\n  verifySurvey = () => {\n    const {survey} = this.state;\n    if (survey.mturk_id === null || survey.gender === null || survey.age === null) {\n      return 'Participant Infomation';\n    }\n    for (let i = 0; i < survey.questions.length; i++) {\n      let q = survey.questions[i];\n\n      if (this.verifyQuestion(q)) {\n        return `Questionaire ${i + 1}`;\n      }\n    }\n\n    return null;\n  }\n\n  onSubmit = () => {\n    const verifyResult = this.verifySurvey();\n\n    if (verifyResult !== null) {\n      notification.error({\n        duration: 10,\n        message: 'Error',\n        description: `Please complete ${verifyResult} to submit`,\n      });\n\n      return;\n    }\n\n    const { survey } = this.state;\n\n    const duration = ((new Date()) - this.startTime);\n\n    survey.duration = duration;\n\n    axios.post('/survey', {\n      survey,\n      auth: 'f8792bn109_bh32jh989^81',\n    }, {timeout: 1000}).then(res => {\n      this.setState({submitted: true});\n      this.showNotification();\n    }).catch(err => {\n      const msg = err.response ? err.response.data : 'Network error';\n\n      notification.error({\n        duration: 10,\n        message: 'Error',\n        description: `${msg}! Please contact us in Mturk.`\n      })\n    }).finally(() => {\n      this.setState({loading: false})\n    });\n\n    this.setState({loading: true})\n  }\n\n  showNotification = () => {\n    const config = {\n      duration: 10,\n      message: 'Congratulation!',\n      description: 'You have answered all questions.'\n    };\n\n    notification.success(config);\n  }\n\n  showWarning = () => {\n    notification.warning({\n      duration: 60,\n      message: 'Attention',\n      description: 'Welcome to our study! The purpose of this study is to test the effectiveness of a recommendation explanation system. You will be presented with two items and make a choice based on the explanations provided. Afterward, we will provide you with additional information and real user reviews about the items to evaluate the effectiveness of the explanations. Please note that there is no correct or wrong answer to the questions. Simply use your best judgment when answering the questions.'\n    });\n  }\n\n  render() {\n    const { context, survey, submitted, loading } = this.state;\n\n    return (\n      <>\n        {\n          submitted &&\n            <Alert\n              message=\"Congratulation!\"\n              description=\"You have successfully completed the survey! Thank you for your participation! You may close this page now.\"\n              type=\"success\"\n              showIcon\n              style={{marginBottom: 24}}\n            />\n        }\n        {loading && <Spin size=\"large\" />}\n        {\n          survey && !submitted &&\n            <>\n              <Alert\n                message=\"Welcome to our study!\"\n                description={\n                  <>\n                    The purpose of this study is to evaluate the effectiveness of a recommendation explanation generation system. You will need to complete a questionnaire which contains the following three steps.\n                    <ol>\n                      <li>You will be presented with two recommended items and the generated explanations for the recommendations. Please make a choice based on the explanations.</li>\n                      <li>You will be asked questions to evaluate the quality of the explanations from different perspectives.</li>\n                      <li>We will provide you with additional information and real user reviews about the items to evaluate the effectiveness of the explanations.</li>\n                    </ol>\n                    Please note that there is no correct or wrong answer to the questions. Simply use your best judgment when answering the questions.\n                  </>\n                }\n                type=\"info\"\n                showIcon\n                style={{marginBottom: 24}}\n              />\n              <Alert\n                message=\"Attention\"\n                description={\n                  <>\n                    <b>Random answers will be rejected. </b>\n                    Your behavior on this questionnaire is recorded for quality control. Please answer the questions thoughtfully and carefully to receive the full reward.\n                  </>\n                }\n                type=\"info\"\n                showIcon\n                style={{marginBottom: 24}}\n              />\n              <Row gutter={24}>\n                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                  <Card title={(<><Icon type=\"user\" className={styles.icon} />Participant Infomation</>)} style={{marginBottom: 20}}>\n                    <ParticipantInfo survey={survey} onChange={this.onSurveyChange} />\n                  </Card>\n\n                  <Survey survey={survey} onChange={this.onSurveyChange} />\n\n                  <Button type=\"primary\" size=\"large\" onClick={this.onSubmit} disabled={loading}>\n                    Submit\n                  </Button>\n                </Col>\n              </Row>\n            </>\n        }\n\n        {/* <ContextModal visible={!Boolean(context)} onSubmit={this.onContextSubmit} /> */}\n      </>\n    );\n  }\n}\n\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { Layout, Icon } from 'antd';\nimport shortid from 'shortid';\n\nimport Main from './Main';\n\nimport styles from './App.module.css';\n\nconst { Header, Content, Footer } = Layout;\n\nconst id = shortid.generate();\n\nclass App extends Component {\n  render() {\n\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className={styles.profile}><Icon type=\"user\" /> {id}</div>\n          <span className={styles.logo}>User Study of Explanation Recommendation System</span>\n        </Header>\n        <Content className={styles.content}>\n          <Main onEnd={this.onEnd} />\n        </Content>\n        <Footer className={styles.footer}>\n          <a href=\"http://www.cs.virginia.edu/~hw5x/HCDM/\">\n            Human-Centric Data Mining Group\n          </a>\n          &nbsp;@ UVa\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'antd/dist/antd.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"Main_icon__DR1SY\",\"section\":\"Main_section__3ega8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"App_logo__2TZGr\",\"content\":\"App_content__3bXcq\",\"footer\":\"App_footer__1Ri8N\",\"profile\":\"App_profile__3v9ud\"};"],"sourceRoot":""}